name: Test Solonet Build

# Controls when the action will run.
on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Install linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang libssl-dev llvm libudev-dev protobuf-compiler

      - name: Install Rust
        run: |
          rustup update stable --no-self-update
          rustup target add wasm32-unknown-unknown

      # Rust cache
      - uses: Swatinem/rust-cache@v2

      - name: Test Build
        run: |
          SKIP_WASM_BUILD=1 cargo test --release

      - name: Test Build for Benchmarking
        run: >
          pushd node &&
          cargo test --features=runtime-benchmarks --release

  test-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test Docker build (builder stage only)
        uses: docker/build-push-action@v6
        with:
          context: .
          target: builder   # compile code but stop before final fat image
          push: false
          load: false       # don't export layers to docker engine (saves disk)
          cache-from: type=gha

      - name: Verify node binary exists in builder stage output
        run: echo "Dockerfile syntax & builder stage compilation succeeded."
