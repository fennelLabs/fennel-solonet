
//! Autogenerated weights for `pallet_validator_manager`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 47.0.0
//! DATE: 2025-07-06, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `DESKTOP-AH3IE72`, CPU: `AMD Ryzen 3 3100 4-Core Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --runtime
// target/release/wbuild/fennel-node-runtime/fennel_node_runtime.wasm
// --pallet
// pallet_validator_manager
// --extrinsic
// *
// --template
// scripts/benchmarking/frame-weight-template.hbs
// --output
// pallets/validator-manager/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_validator_manager`.
pub trait WeightInfo {
	fn register_validators(c: u32, ) -> Weight;
	fn remove_validator() -> Weight;
}

/// Weights for `pallet_validator_manager` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `ValidatorManager::ValidatorsToAdd` (r:1 w:1)
	/// Proof: `ValidatorManager::ValidatorsToAdd` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Session::NextKeys` (r:10 w:0)
	/// Proof: `Session::NextKeys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `c` is `[1, 10]`.
	fn register_validators(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `170 + c * (112 ±0)`
		//  Estimated: `1655 + c * (2588 ±0)`
		// Minimum execution time: 18_585_000 picoseconds.
		Weight::from_parts(15_615_066, 1655)
			// Standard Error: 17_929
			.saturating_add(Weight::from_parts(3_979_297, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(c.into())))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 2588).saturating_mul(c.into()))
	}
	/// Storage: `Session::Validators` (r:1 w:0)
	/// Proof: `Session::Validators` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ValidatorManager::ValidatorsToRemove` (r:1 w:1)
	/// Proof: `ValidatorManager::ValidatorsToRemove` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ValidatorManager::ValidatorsToAdd` (r:1 w:0)
	/// Proof: `ValidatorManager::ValidatorsToAdd` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn remove_validator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `239`
		//  Estimated: `1724`
		// Minimum execution time: 16_740_000 picoseconds.
		Weight::from_parts(17_190_000, 1724)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `ValidatorManager::ValidatorsToAdd` (r:1 w:1)
	/// Proof: `ValidatorManager::ValidatorsToAdd` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Session::NextKeys` (r:10 w:0)
	/// Proof: `Session::NextKeys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `c` is `[1, 10]`.
	fn register_validators(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `170 + c * (112 ±0)`
		//  Estimated: `1655 + c * (2588 ±0)`
		// Minimum execution time: 18_585_000 picoseconds.
		Weight::from_parts(15_615_066, 1655)
			// Standard Error: 17_929
			.saturating_add(Weight::from_parts(3_979_297, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(c.into())))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 2588).saturating_mul(c.into()))
	}
	/// Storage: `Session::Validators` (r:1 w:0)
	/// Proof: `Session::Validators` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ValidatorManager::ValidatorsToRemove` (r:1 w:1)
	/// Proof: `ValidatorManager::ValidatorsToRemove` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ValidatorManager::ValidatorsToAdd` (r:1 w:0)
	/// Proof: `ValidatorManager::ValidatorsToAdd` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn remove_validator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `239`
		//  Estimated: `1724`
		// Minimum execution time: 16_740_000 picoseconds.
		Weight::from_parts(17_190_000, 1724)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
